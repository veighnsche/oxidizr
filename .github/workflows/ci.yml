name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Check formatting
        run: cargo fmt -- --check
      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Guardrails (authoritative modules)
        run: |
          set -euo pipefail
          echo "Checking no direct which::which usage outside src/system/worker/fs_ops.rs"
          if grep -R --line-number --fixed-strings "which::which" src | grep -v "^src/system/worker/fs_ops.rs:"; then
            echo "ERROR: which::which used outside src/system/worker/fs_ops.rs" >&2
            exit 1
          fi

          echo "Checking single logging sink setup (tracing_subscriber::fmt only in src/logging/init.rs)"
          if grep -R --line-number --fixed-strings "tracing_subscriber::fmt" src | grep -v "^src/logging/init.rs:"; then
            echo "ERROR: tracing_subscriber::fmt used outside src/logging/init.rs" >&2
            exit 1
          fi

          echo "Checking single symlink implementation (std::os::unix::fs::symlink only in src/symlink/ops.rs)"
          if grep -R --line-number --fixed-strings "std::os::unix::fs::symlink" src | grep -v "^src/symlink/ops.rs:"; then
            echo "ERROR: std::os::unix::fs::symlink used outside src/symlink/ops.rs" >&2
            exit 1
          fi

          # Also check the common alias used in code: unix_fs::symlink
          if grep -R --line-number --fixed-strings "unix_fs::symlink" src | grep -v "^src/symlink/ops.rs:"; then
            echo "ERROR: unix_fs::symlink used outside src/symlink/ops.rs" >&2
            exit 1
          fi

          echo "Guardrails passed"

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run unit tests
        run: cargo test

  test-ci-runner:
    name: Test CI Runner
    runs-on: ubuntu-latest
    needs: test-unit
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run CI test runner (switchyard crate)
        run: |
          python3 test_ci_runner.py -p switchyard --nocapture

  golden-fixtures:
    name: Golden Fixtures Diff
    runs-on: ubuntu-latest
    needs: test-ci-runner
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run golden diff (all scenarios)
        id: run_golden
        run: |
          set -e
          python3 test_ci_runner.py --golden all --nocapture
      - name: Upload golden diffs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: golden-diff
          path: golden-diff
          if-no-files-found: ignore
