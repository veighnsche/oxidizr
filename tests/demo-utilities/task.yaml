summary: Demo: exercise coreutils, findutils, and sudo in container runner

# Run on Arch and common Arch derivatives our infra supports
# The container runner normalizes the environment and grants NOPASSWD sudo to 'builder'.
distro-check:
  - arch
  - manjaro
  - cachyos
  - endeavouros

execute: |
  set -euo pipefail

  echo "[demo] Enabling oxidizr-arch defaults (uutils-coreutils, sudo-rs)..."
  oxidizr-arch enable --yes

  echo "[demo] Verifying core symlinks exist..."
  [ -L /usr/bin/date ] || { echo "/usr/bin/date should be a symlink"; exit 1; }
  [ -L /usr/bin/ls ] || { echo "/usr/bin/ls should be a symlink"; exit 1; }
  [ -L /usr/bin/sudo ] || { echo "/usr/bin/sudo should be a symlink"; exit 1; }

  echo "[demo] Creating sandbox..."
  DEMO=/tmp/oxidizr-demo
  rm -rf "$DEMO"
  mkdir -p "$DEMO/sub/dir"
  printf "alpha\nBeta\nalpha\nGAmma\n" > "$DEMO/input.txt"
  printf "foo bar baz\nhello world\nfoo qux\n" > "$DEMO/words.txt"
  touch "$DEMO/sub/a" "$DEMO/sub/b" "$DEMO/sub/dir/c"

  echo "[demo][coreutils] Basic file ops (cp/mv/ln/rm/chmod/touch/wc/head/tail/cut/tr/sort/uniq)"
  cp "$DEMO/input.txt" "$DEMO/copy.txt"
  mv "$DEMO/copy.txt" "$DEMO/moved.txt"
  ln -s "$DEMO/moved.txt" "$DEMO/link.txt"
  chmod 600 "$DEMO/moved.txt"
  [ -f "$DEMO/moved.txt" ] && [ -L "$DEMO/link.txt" ]
  COUNT=$(wc -l < "$DEMO/moved.txt")
  [ "$COUNT" -eq 4 ]
  head -n 2 "$DEMO/moved.txt" > "$DEMO/head.txt"
  tail -n 2 "$DEMO/moved.txt" > "$DEMO/tail.txt"
  cut -d ' ' -f1 "$DEMO/words.txt" | sort | uniq -c > "$DEMO/first-words.counts"
  # Expect 'foo' appears 2 times, 'hello' 1 time
  grep -q "^\s*2 foo$" "$DEMO/first-words.counts"
  grep -q "^\s*1 hello$" "$DEMO/first-words.counts"
  tr '[:upper:]' '[:lower:]' < "$DEMO/moved.txt" > "$DEMO/lower.txt"
  grep -q "gamma" "$DEMO/lower.txt"

  echo "[demo][coreutils] date and dd sanity"
  date +%Y >/dev/null 2>&1
  printf "0123456789abcdef" | dd bs=4 count=2 status=none of="$DEMO/dd.bin"
  [ -s "$DEMO/dd.bin" ]

  echo "[demo][findutils] find/xargs on directory tree"
  FOUND=$(find "$DEMO" -type f -name "*.txt" | wc -l)
  [ "$FOUND" -ge 4 ]
  # Replace spaces with underscores for files under $DEMO using find -print0 | xargs -0
  printf "%s\n" "$DEMO/space file.txt" > "$DEMO/space file.txt"
  find "$DEMO" -type f -name "* *" -print0 | xargs -0 -I{} bash -c 'mv "$1" "${1// /_}"' _ {}
  test -f "$DEMO/space_file.txt"

  echo "[demo][sudo] verify sudo-rs works for builder user"
  # Sanity: confirm sudo binary is from uutils (symlink already checked). Execute via builder.
  su - builder -c 'sudo -n true'
  # Verify sudo elevates to root (id -u == 0)
  su - builder -c 'test "$(sudo -n id -u)" -eq 0'

  echo "[demo][sudo] privileged file write via sudo"
  # As builder, attempt to append to /root/oxidizr_sudo_demo.txt via sudo
  su - builder -c 'sudo -n bash -c "echo hello-from-sudo >> /root/oxidizr_sudo_demo.txt"'
  grep -q "hello-from-sudo" /root/oxidizr_sudo_demo.txt

  echo "[demo] All demo checks passed."

restore: |
  # Best-effort cleanup to keep containers tidy when running locally.
  # In CI we keep state to help debugging failures, so we skip restore there.
  if [ -z "${CI:-}" ]; then
    set -euo pipefail
    rm -rf /tmp/oxidizr-demo || true
    rm -f /root/oxidizr_sudo_demo.txt || true
    oxidizr-arch disable --yes --all || true
  fi
